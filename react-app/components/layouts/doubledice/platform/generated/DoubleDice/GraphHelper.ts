// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class GraphHelper__decodeVirtualFloorMetadataV1ResultDecodedStruct extends ethereum.Tuple {
  get category(): string {
    return this[0].toString();
  }

  get subcategory(): string {
    return this[1].toString();
  }

  get title(): string {
    return this[2].toString();
  }

  get description(): string {
    return this[3].toString();
  }

  get isListed(): boolean {
    return this[4].toBoolean();
  }

  get opponents(): Array<
    GraphHelper__decodeVirtualFloorMetadataV1ResultDecodedOpponentsStruct
  > {
    return this[5].toTupleArray<
      GraphHelper__decodeVirtualFloorMetadataV1ResultDecodedOpponentsStruct
    >();
  }

  get outcomes(): Array<
    GraphHelper__decodeVirtualFloorMetadataV1ResultDecodedOutcomesStruct
  > {
    return this[6].toTupleArray<
      GraphHelper__decodeVirtualFloorMetadataV1ResultDecodedOutcomesStruct
    >();
  }

  get resultSources(): Array<
    GraphHelper__decodeVirtualFloorMetadataV1ResultDecodedResultSourcesStruct
  > {
    return this[7].toTupleArray<
      GraphHelper__decodeVirtualFloorMetadataV1ResultDecodedResultSourcesStruct
    >();
  }

  get discordChannelId(): string {
    return this[8].toString();
  }

  get extraData(): Bytes {
    return this[9].toBytes();
  }
}

export class GraphHelper__decodeVirtualFloorMetadataV1ResultDecodedOpponentsStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get image(): string {
    return this[1].toString();
  }
}

export class GraphHelper__decodeVirtualFloorMetadataV1ResultDecodedOutcomesStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }
}

export class GraphHelper__decodeVirtualFloorMetadataV1ResultDecodedResultSourcesStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get url(): string {
    return this[1].toString();
  }
}

export class GraphHelper__encodeVirtualFloorMetadataV1InputDecodedStruct extends ethereum.Tuple {
  get category(): string {
    return this[0].toString();
  }

  get subcategory(): string {
    return this[1].toString();
  }

  get title(): string {
    return this[2].toString();
  }

  get description(): string {
    return this[3].toString();
  }

  get isListed(): boolean {
    return this[4].toBoolean();
  }

  get opponents(): Array<
    GraphHelper__encodeVirtualFloorMetadataV1InputDecodedOpponentsStruct
  > {
    return this[5].toTupleArray<
      GraphHelper__encodeVirtualFloorMetadataV1InputDecodedOpponentsStruct
    >();
  }

  get outcomes(): Array<
    GraphHelper__encodeVirtualFloorMetadataV1InputDecodedOutcomesStruct
  > {
    return this[6].toTupleArray<
      GraphHelper__encodeVirtualFloorMetadataV1InputDecodedOutcomesStruct
    >();
  }

  get resultSources(): Array<
    GraphHelper__encodeVirtualFloorMetadataV1InputDecodedResultSourcesStruct
  > {
    return this[7].toTupleArray<
      GraphHelper__encodeVirtualFloorMetadataV1InputDecodedResultSourcesStruct
    >();
  }

  get discordChannelId(): string {
    return this[8].toString();
  }

  get extraData(): Bytes {
    return this[9].toBytes();
  }
}

export class GraphHelper__encodeVirtualFloorMetadataV1InputDecodedOpponentsStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get image(): string {
    return this[1].toString();
  }
}

export class GraphHelper__encodeVirtualFloorMetadataV1InputDecodedOutcomesStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }
}

export class GraphHelper__encodeVirtualFloorMetadataV1InputDecodedResultSourcesStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get url(): string {
    return this[1].toString();
  }
}

export class GraphHelper extends ethereum.SmartContract {
  static bind(address: Address): GraphHelper {
    return new GraphHelper("GraphHelper", address);
  }

  decodeVirtualFloorMetadataV1(
    encoded: Bytes
  ): GraphHelper__decodeVirtualFloorMetadataV1ResultDecodedStruct {
    let result = super.call(
      "decodeVirtualFloorMetadataV1",
      "decodeVirtualFloorMetadataV1(bytes):((string,string,string,string,bool,(string,string)[],(string)[],(string,string)[],string,bytes))",
      [ethereum.Value.fromBytes(encoded)]
    );

    return changetype<
      GraphHelper__decodeVirtualFloorMetadataV1ResultDecodedStruct
    >(result[0].toTuple());
  }

  try_decodeVirtualFloorMetadataV1(
    encoded: Bytes
  ): ethereum.CallResult<
    GraphHelper__decodeVirtualFloorMetadataV1ResultDecodedStruct
  > {
    let result = super.tryCall(
      "decodeVirtualFloorMetadataV1",
      "decodeVirtualFloorMetadataV1(bytes):((string,string,string,string,bool,(string,string)[],(string)[],(string,string)[],string,bytes))",
      [ethereum.Value.fromBytes(encoded)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<GraphHelper__decodeVirtualFloorMetadataV1ResultDecodedStruct>(
        value[0].toTuple()
      )
    );
  }

  encodeVirtualFloorMetadataV1(
    decoded: GraphHelper__encodeVirtualFloorMetadataV1InputDecodedStruct
  ): Bytes {
    let result = super.call(
      "encodeVirtualFloorMetadataV1",
      "encodeVirtualFloorMetadataV1((string,string,string,string,bool,(string,string)[],(string)[],(string,string)[],string,bytes)):(bytes)",
      [ethereum.Value.fromTuple(decoded)]
    );

    return result[0].toBytes();
  }

  try_encodeVirtualFloorMetadataV1(
    decoded: GraphHelper__encodeVirtualFloorMetadataV1InputDecodedStruct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "encodeVirtualFloorMetadataV1",
      "encodeVirtualFloorMetadataV1((string,string,string,string,bool,(string,string)[],(string)[],(string,string)[],string,bytes)):(bytes)",
      [ethereum.Value.fromTuple(decoded)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}
